<application>
  <component name="IntentionManagerSettings">
    <ignoreAction name="ActionScript/Create Event Handler" />
    <ignoreAction name="ActionScript/Create Getter" />
    <ignoreAction name="ActionScript/Create Getter and Setter" />
    <ignoreAction name="ActionScript/Create Setter" />
    <ignoreAction name="ActionScript/Create Subclass or Implement Interface" />
    <ignoreAction name="Android/Add Parcelable Implementation" />
    <ignoreAction name="Android/Add activity to manifest" />
    <ignoreAction name="Android/Add broadcast receiver to manifest" />
    <ignoreAction name="Android/Add library dependency" />
    <ignoreAction name="Android/Add service to manifest" />
    <ignoreAction name="Android/Convert to data binding layout" />
    <ignoreAction name="Android/Create onClick event handler" />
    <ignoreAction name="Android/Extract color resource" />
    <ignoreAction name="Android/Extract dimension resource" />
    <ignoreAction name="Android/Extract string resource" />
    <ignoreAction name="Android/Override Resource in Other Configuration..." />
    <ignoreAction name="Android/Remove Parcelable Implementation" />
    <ignoreAction name="Android/Replace Parcelable Implementation" />
    <ignoreAction name="CoffeeScript/Replace Double-Quoted String with Single-Quoted String" />
    <ignoreAction name="CoffeeScript/Replace Single-Quoted String with Double-Quoted String" />
    <ignoreAction name="Google Web Toolkit/Create @UiField for tag" />
    <ignoreAction name="Google Web Toolkit/Create @UiHandler for tag" />
    <ignoreAction name="Grails/Create action" />
    <ignoreAction name="Grails/Create view (GSP page)" />
    <ignoreAction name="Grails/Extract selected text to message.properties" />
    <ignoreAction name="Grails/Make property nullable" />
    <ignoreAction name="Grails/Make property unique" />
    <ignoreAction name="Groovy/Grab" />
    <ignoreAction name="Groovy/Closures/Make Closure Call Explicit" />
    <ignoreAction name="Groovy/Closures/Make Closure Call Implicit" />
    <ignoreAction name="Groovy/Closures/Replace Each With For-In" />
    <ignoreAction name="Groovy/Closures/Replace For-In With Each" />
    <ignoreAction name="Groovy/Comments/Replace With C-Style Comment" />
    <ignoreAction name="Groovy/Control Flow/Add constructor parameter for field" />
    <ignoreAction name="Groovy/Control Flow/DeMorgan's Law" />
    <ignoreAction name="Groovy/Control Flow/Expand Boolean" />
    <ignoreAction name="Groovy/Control Flow/Flip Comparison Operands" />
    <ignoreAction name="Groovy/Control Flow/Flip Conditional" />
    <ignoreAction name="Groovy/Control Flow/Flip Conjunction Operands" />
    <ignoreAction name="Groovy/Control Flow/Flip if statements" />
    <ignoreAction name="Groovy/Control Flow/Invert 'if' condition" />
    <ignoreAction name="Groovy/Control Flow/Merge Else If" />
    <ignoreAction name="Groovy/Control Flow/Merge Nested Ifs To ANDed Condition" />
    <ignoreAction name="Groovy/Control Flow/Negate Comparison" />
    <ignoreAction name="Groovy/Control Flow/Remove redundant 'else' keyword" />
    <ignoreAction name="Groovy/Control Flow/Replace ''?:'' with if else" />
    <ignoreAction name="Groovy/Control Flow/Replace if-statement with ternary operator" />
    <ignoreAction name="Groovy/Control Flow/Simplify Conditional Expression" />
    <ignoreAction name="Groovy/Control Flow/Split Else If" />
    <ignoreAction name="Groovy/Control Flow/Split into 2 if's" />
    <ignoreAction name="Groovy/Declaration/Create field for parameter" />
    <ignoreAction name="Groovy/Declaration/Declare explicit type" />
    <ignoreAction name="Groovy/Declaration/Groovy Introduce local variable" />
    <ignoreAction name="Groovy/Declaration/Implement abstract class or interface" />
    <ignoreAction name="Groovy/Declaration/Make 'private'" />
    <ignoreAction name="Groovy/Declaration/Make 'protected'" />
    <ignoreAction name="Groovy/Declaration/Make 'public'" />
    <ignoreAction name="Groovy/Declaration/Remove explicit type declaration" />
    <ignoreAction name="Groovy/Expression conversions/Break string on '\n'" />
    <ignoreAction name="Groovy/Expression conversions/Cast to char" />
    <ignoreAction name="Groovy/Expression conversions/Convert GString To String" />
    <ignoreAction name="Groovy/Expression conversions/Convert Groovy native map to class instances" />
    <ignoreAction name="Groovy/Expression conversions/Convert Indexing Method To [] Form" />
    <ignoreAction name="Groovy/Expression conversions/Convert JUnit assertion to assert statement" />
    <ignoreAction name="Groovy/Expression conversions/Convert Java-Style Array Creation to Groovy Syntax" />
    <ignoreAction name="Groovy/Expression conversions/Convert String Concatenation to GString" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Binary" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Decimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Hexadecimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Octal" />
    <ignoreAction name="Groovy/Expression conversions/Convert [] Form To Index Method" />
    <ignoreAction name="Groovy/Expression conversions/Convert cast expression to safe cast expression" />
    <ignoreAction name="Groovy/Expression conversions/Convert literal to multiline literal" />
    <ignoreAction name="Groovy/Expression conversions/Convert method to property of closure type" />
    <ignoreAction name="Groovy/Expression conversions/Convert multiline string to single-line" />
    <ignoreAction name="Groovy/Expression conversions/Convert property to method" />
    <ignoreAction name="Groovy/Expression conversions/Convert simple getter to property" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to dollar-slashy string" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to regular expression" />
    <ignoreAction name="Groovy/Expression conversions/Convert to @CompileStatic" />
    <ignoreAction name="Groovy/Expression conversions/Move class to separate file" />
    <ignoreAction name="Groovy/Expression conversions/Remove Unnecessary Braces in GString" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary escape characters" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary parentheses from method call" />
    <ignoreAction name="Groovy/Expression conversions/Rename class to corresponding file name" />
    <ignoreAction name="Groovy/Expression conversions/Rename file to corresponding class name" />
    <ignoreAction name="Groovy/Expression conversions/Split Variable Declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add On Demand Static Import in Groovy" />
    <ignoreAction name="Groovy/Groovy-style/Add Single-Member Static Import in Groovy" />
    <ignoreAction name="Groovy/Groovy-style/Add return type to method declaration" />
    <ignoreAction name="Groovy/Groovy-style/Change anonymous class to dynamic instantiation" />
    <ignoreAction name="Groovy/Groovy-style/Convert method or closure parameters to map entries" />
    <ignoreAction name="Groovy/Groovy-style/Format braces in separate lines" />
    <ignoreAction name="Groovy/Groovy-style/Format closing closure braces in one line" />
    <ignoreAction name="Groovy/Groovy-style/Remove redundant .class" />
    <ignoreAction name="Groovy/Groovy-style/Remove unnecessary 'return' keyword" />
    <ignoreAction name="Groovy/Other/Add 'value='" />
    <ignoreAction name="Groovy/Other/Alias import statically imported member" />
    <ignoreAction name="Groovy/Other/Copy string concatenation text to clipboard" />
    <ignoreAction name="Groovy/Other/Create missing 'switch' branches" />
    <ignoreAction name="Groovy/Other/Sort map entries alphabetically" />
    <ignoreAction name="Guice/Move Binding Scope To Class" />
    <ignoreAction name="Guice/Move Binding To Class" />
    <ignoreAction name="Guice/Move Provider Binding To Class" />
    <ignoreAction name="Guice/Toggle Injection Required" />
    <ignoreAction name="JavaFX/Collapse tag to attribute" />
    <ignoreAction name="JavaFX/Convert to JavaFX property" />
    <ignoreAction name="JavaFX/Expand attribute to tag" />
    <ignoreAction name="JavaFX/Switch CSS dialect" />
    <ignoreAction name="JavaFX/Use binary css file" />
    <ignoreAction name="Kotlin/Add '@JvmOverloads' annotation" />
    <ignoreAction name="Kotlin/Add '@JvmStatic' annotation" />
    <ignoreAction name="Kotlin/Add '@Throws' annotation" />
    <ignoreAction name="Kotlin/Add 'const' modifier" />
    <ignoreAction name="Kotlin/Add 'operator' modifier" />
    <ignoreAction name="Kotlin/Add braces" />
    <ignoreAction name="Kotlin/Add explicit type arguments" />
    <ignoreAction name="Kotlin/Add getter" />
    <ignoreAction name="Kotlin/Add getter and setter" />
    <ignoreAction name="Kotlin/Add import for member" />
    <ignoreAction name="Kotlin/Add indices to 'for' loop" />
    <ignoreAction name="Kotlin/Add labeled return to last expression in a lambda" />
    <ignoreAction name="Kotlin/Add missing component" />
    <ignoreAction name="Kotlin/Add name to argument" />
    <ignoreAction name="Kotlin/Add names to call arguments" />
    <ignoreAction name="Kotlin/Add remaining branches" />
    <ignoreAction name="Kotlin/Add setter" />
    <ignoreAction name="Kotlin/Add use-site target" />
    <ignoreAction name="Kotlin/Add val/var to primary constructor parameter" />
    <ignoreAction name="Kotlin/Change package" />
    <ignoreAction name="Kotlin/Convert Boolean? == const to elvis" />
    <ignoreAction name="Kotlin/Convert anonymous function to lambda expression" />
    <ignoreAction name="Kotlin/Convert concatenation to template" />
    <ignoreAction name="Kotlin/Convert function to property" />
    <ignoreAction name="Kotlin/Convert function type parameter to receiver" />
    <ignoreAction name="Kotlin/Convert function type receiver to parameter" />
    <ignoreAction name="Kotlin/Convert lambda expression to anonymous function" />
    <ignoreAction name="Kotlin/Convert member to extension" />
    <ignoreAction name="Kotlin/Convert object literal to class" />
    <ignoreAction name="Kotlin/Convert object literal to lambda" />
    <ignoreAction name="Kotlin/Convert parameter to receiver" />
    <ignoreAction name="Kotlin/Convert property getter to initializer" />
    <ignoreAction name="Kotlin/Convert property initializer to getter" />
    <ignoreAction name="Kotlin/Convert property to function" />
    <ignoreAction name="Kotlin/Convert receiver to parameter" />
    <ignoreAction name="Kotlin/Convert template to concatenated string" />
    <ignoreAction name="Kotlin/Convert to 'trimIndent'" />
    <ignoreAction name="Kotlin/Convert to 'trimMargin'" />
    <ignoreAction name="Kotlin/Convert to also" />
    <ignoreAction name="Kotlin/Convert to anonymous object" />
    <ignoreAction name="Kotlin/Convert to apply" />
    <ignoreAction name="Kotlin/Convert to array parameter" />
    <ignoreAction name="Kotlin/Convert to block body" />
    <ignoreAction name="Kotlin/Convert to comparisons" />
    <ignoreAction name="Kotlin/Convert to enum class" />
    <ignoreAction name="Kotlin/Convert to lateinit var" />
    <ignoreAction name="Kotlin/Convert to nullable var" />
    <ignoreAction name="Kotlin/Convert to object declaration" />
    <ignoreAction name="Kotlin/Convert to primary constructor" />
    <ignoreAction name="Kotlin/Convert to range check" />
    <ignoreAction name="Kotlin/Convert to run" />
    <ignoreAction name="Kotlin/Convert to sealed class" />
    <ignoreAction name="Kotlin/Convert to secondary constructor" />
    <ignoreAction name="Kotlin/Convert to unsafe cast" />
    <ignoreAction name="Kotlin/Convert to unsafeCast() call" />
    <ignoreAction name="Kotlin/Convert to vararg parameter" />
    <ignoreAction name="Kotlin/Convert to with" />
    <ignoreAction name="Kotlin/Convert try-finally to .use()" />
    <ignoreAction name="Kotlin/Copy concatenation text to clipboard" />
    <ignoreAction name="Kotlin/Create Kotlin subclass" />
    <ignoreAction name="Kotlin/Create test" />
    <ignoreAction name="Kotlin/DeMorgan Law" />
    <ignoreAction name="Kotlin/Eliminate argument of 'when'" />
    <ignoreAction name="Kotlin/Flatten 'when' expression" />
    <ignoreAction name="Kotlin/Flip 'equals'" />
    <ignoreAction name="Kotlin/Flip binary expression" />
    <ignoreAction name="Kotlin/Implement abstract member" />
    <ignoreAction name="Kotlin/Import members with '*'" />
    <ignoreAction name="Kotlin/Indent raw string" />
    <ignoreAction name="Kotlin/Insert curly braces around variable" />
    <ignoreAction name="Kotlin/Introduce backing property" />
    <ignoreAction name="Kotlin/Introduce local variable" />
    <ignoreAction name="Kotlin/Invert 'if' condition" />
    <ignoreAction name="Kotlin/Iterate over collection" />
    <ignoreAction name="Kotlin/Join declaration and assignment" />
    <ignoreAction name="Kotlin/Make internal" />
    <ignoreAction name="Kotlin/Make open" />
    <ignoreAction name="Kotlin/Make private" />
    <ignoreAction name="Kotlin/Make protected" />
    <ignoreAction name="Kotlin/Make public" />
    <ignoreAction name="Kotlin/Merge 'if's" />
    <ignoreAction name="Kotlin/Merge 'when' expressions" />
    <ignoreAction name="Kotlin/Move declaration to separate file" />
    <ignoreAction name="Kotlin/Move lambda argument into parentheses" />
    <ignoreAction name="Kotlin/Move out of companion object" />
    <ignoreAction name="Kotlin/Move to build&gt;sourceDirectory tag" />
    <ignoreAction name="Kotlin/Move to class body" />
    <ignoreAction name="Kotlin/Move to companion object" />
    <ignoreAction name="Kotlin/Move to compile execution" />
    <ignoreAction name="Kotlin/Move to constructor" />
    <ignoreAction name="Kotlin/Move to top level" />
    <ignoreAction name="Kotlin/Put arguments on one line" />
    <ignoreAction name="Kotlin/Put arguments on separate lines" />
    <ignoreAction name="Kotlin/Put parameters on one line" />
    <ignoreAction name="Kotlin/Put parameters on separate lines" />
    <ignoreAction name="Kotlin/Remove argument name" />
    <ignoreAction name="Kotlin/Remove braces" />
    <ignoreAction name="Kotlin/Remove curly braces" />
    <ignoreAction name="Kotlin/Remove empty class body" />
    <ignoreAction name="Kotlin/Remove empty constructor body" />
    <ignoreAction name="Kotlin/Remove empty primary constructor" />
    <ignoreAction name="Kotlin/Remove explicit lambda parameter types (may break code)" />
    <ignoreAction name="Kotlin/Remove explicit supertype qualification" />
    <ignoreAction name="Kotlin/Remove explicit type arguments" />
    <ignoreAction name="Kotlin/Remove explicit type specification" />
    <ignoreAction name="Kotlin/Remove indices in 'for' loop" />
    <ignoreAction name="Kotlin/Remove labeled return from last expression in a lambda" />
    <ignoreAction name="Kotlin/Remove redundant '.let' call" />
    <ignoreAction name="Kotlin/Remove redundant calls of the conversion method" />
    <ignoreAction name="Kotlin/Remove single-expression string template" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses from function call with lambda" />
    <ignoreAction name="Kotlin/Rename file to match top-level class name" />
    <ignoreAction name="Kotlin/Replace '!!' expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace '_' with parameter name" />
    <ignoreAction name="Kotlin/Replace 'assert' with 'if' statement" />
    <ignoreAction name="Kotlin/Replace 'contains' call with 'in' operator" />
    <ignoreAction name="Kotlin/Replace 'if' expression with '!!' expression" />
    <ignoreAction name="Kotlin/Replace 'if' expression with return" />
    <ignoreAction name="Kotlin/Replace 'if' with 'assert' statement" />
    <ignoreAction name="Kotlin/Replace 'if' with 'when'" />
    <ignoreAction name="Kotlin/Replace 'if' with elvis operator" />
    <ignoreAction name="Kotlin/Replace 'invoke' with direct call" />
    <ignoreAction name="Kotlin/Replace 'it' with explicit parameter" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'dropLast' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'substringAfter' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'substringBefore' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'take' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with indexing operation call" />
    <ignoreAction name="Kotlin/Replace 'when' with 'if'" />
    <ignoreAction name="Kotlin/Replace Math.max with coerceAtLeast" />
    <ignoreAction name="Kotlin/Replace Math.min with coerceAtMost" />
    <ignoreAction name="Kotlin/Replace assignment with 'if' expression" />
    <ignoreAction name="Kotlin/Replace assignment with 'when' expression" />
    <ignoreAction name="Kotlin/Replace by reconstructed type" />
    <ignoreAction name="Kotlin/Replace call with unary operator" />
    <ignoreAction name="Kotlin/Replace camel-case name with spaces" />
    <ignoreAction name="Kotlin/Replace elvis expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace explicit lambda parameter with 'it'" />
    <ignoreAction name="Kotlin/Replace infix call with ordinary call" />
    <ignoreAction name="Kotlin/Replace negated sequence with DeMorgan equivalent" />
    <ignoreAction name="Kotlin/Replace overloaded operator with function call" />
    <ignoreAction name="Kotlin/Replace property initializer with 'if' expression" />
    <ignoreAction name="Kotlin/Replace property initializer with 'when' expression" />
    <ignoreAction name="Kotlin/Replace return with 'if' expression" />
    <ignoreAction name="Kotlin/Replace return with 'when' expression" />
    <ignoreAction name="Kotlin/Replace safe access expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace size check with 'isNotEmpty'" />
    <ignoreAction name="Kotlin/Replace size zero check with 'isEmpty'" />
    <ignoreAction name="Kotlin/Replace with '+='" />
    <ignoreAction name="Kotlin/Replace with '..' operator" />
    <ignoreAction name="Kotlin/Replace with a 'for' loop" />
    <ignoreAction name="Kotlin/Replace with a 'forEach' function call" />
    <ignoreAction name="Kotlin/Replace with block comment" />
    <ignoreAction name="Kotlin/Replace with end of line comment" />
    <ignoreAction name="Kotlin/Replace with infix function call" />
    <ignoreAction name="Kotlin/Replace with ordinary assignment" />
    <ignoreAction name="Kotlin/Simplify boolean expression" />
    <ignoreAction name="Kotlin/Specify all types explicitly in destructuring declaration" />
    <ignoreAction name="Kotlin/Specify explicit lambda signature" />
    <ignoreAction name="Kotlin/Specify type explicitly" />
    <ignoreAction name="Kotlin/Split 'if' into two" />
    <ignoreAction name="Kotlin/Split property declaration" />
    <ignoreAction name="Kotlin/To ordinary string literal" />
    <ignoreAction name="Kotlin/To raw string literal" />
    <ignoreAction name="Kotlin/Use destructuring declaration" />
    <ignoreAction name="Kotlin/Use property access syntax" />
    <ignoreAction name="Kotlin/Use withIndex() instead of manual index increment" />
    <ignoreAction name="Kotlin Android/Add Parcelable Implementation" />
    <ignoreAction name="Kotlin Android/Add activity to manifest" />
    <ignoreAction name="Kotlin Android/Add broadcast receiver to manifest" />
    <ignoreAction name="Kotlin Android/Add service to manifest" />
    <ignoreAction name="Kotlin Android/Extract string resource" />
    <ignoreAction name="Kotlin Android/Remove Parcelable Implementation" />
    <ignoreAction name="Kotlin Android/Replace Parcelable Implementation" />
    <ignoreAction name="TypeScript/Convert field to parameter property" />
    <ignoreAction name="TypeScript/Convert parameter property to class field" />
    <ignoreAction name="TypeScript/Convert type alias to enum" />
    <ignoreAction name="TypeScript/Convert type alias to interface" />
    <ignoreAction name="TypeScript/Generate reference path comment" />
    <ignoreAction name="TypeScript/Implement in derived classes" />
    <ignoreAction name="TypeScript/Introduce parameter-properties for unused parameters" />
    <ignoreAction name="TypeScript/Make 'private'" />
    <ignoreAction name="TypeScript/Make 'protected'" />
    <ignoreAction name="TypeScript/Make 'public'" />
    <ignoreAction name="Velocity/Define implicit variable in comment" />
    <ignoreAction name="Velocity/Define macro library reference in comment" />
    <ignoreAction name="Velocity/Define velocity.properties file reference in comment" />
    <ignoreAction name="Logs/Logs" />
    <ignoreAction name="VueJS/Extract Vue Component" />
    <ignoreAction name="WebLogic/Create EJB" />
    <ignoreAction name="CSS/Change color" />
    <ignoreAction name="CSS/Convert color to HEX" />
    <ignoreAction name="CSS/Convert color to HSL/HSLA" />
    <ignoreAction name="CSS/Convert color to HWB" />
    <ignoreAction name="CSS/Convert color to RGB/RGBA" />
    <ignoreAction name="CSS/Convert color to gray" />
    <ignoreAction name="CSS/Create Selector" />
    <ignoreAction name="CSS/Expand CSS shorthand property" />
    <ignoreAction name="CSS/Extract image" />
    <ignoreAction name="CSS/Extract inline CSS" />
    <ignoreAction name="CSS/Extract ruleset" />
    <ignoreAction name="CSS/Replace quotes" />
    <ignoreAction name="CSS/Replace var(...) with its fallback value" />
    <ignoreAction name="CSS/Replace with color name" />
    <ignoreAction name="CSS/Update background-image size" />
    <ignoreAction name="CSV/Quote" />
    <ignoreAction name="CSV/Quote All" />
    <ignoreAction name="CSV/Shift Column Left" />
    <ignoreAction name="CSV/Shift Column Right" />
    <ignoreAction name="CSV/Unquote" />
    <ignoreAction name="CSV/Unquote All" />
    <ignoreAction name="Database/Run query in console" />
    <ignoreAction name="JSP/Replace with Jsp comment" />
  </component>
</application>